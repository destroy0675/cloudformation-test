name: CloudformationTemplate

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    
    runs-on: ubuntu-latest

    steps:
      - name: Checkeout
        uses: actions/checkout@v3
        
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        # if: github.event.push.base.ref == 'master'
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      # - name: Deploy Cloudformation Roles
      #   id: cf-deployRoles
      #   uses: aws-actions/aws-cloudformation-github-deploy@v1
      #   if: github.event.commits[0].message == 'roles'
      #   with:
      #     name: myStackRoles
      #     template: vpc.yaml
      - name: Create change set
        id: cf-changesetcreate
        uses: mdecoleman/cloudformation-changeset@v1
        with:
          method: create
          stack_name: myStack-Roles
          template_file: vpc.yaml
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          #parameters: Runtime=nodejs8.10,Role=arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

      # - name: Deploy Cloudformation Resources
      #   id: cf-deployResources
      #   uses: aws-actions/aws-cloudformation-github-deploy@v1
      #   if: github.event.commits[0].message == 'resources'
      #   with:
      #     name: myStackResources
      #     template: vpc.yaml

      - name: Execute change set
        id: cf-changesetexecute
        uses: mdecoleman/cloudformation-changeset@v1
        with:
          method: execute
          stack_name: myStackRoles
          changeset_name: myStack-Roles
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}

